Evaluating test cases...
**************************************************
Contextual Recall Verbose Logs
**************************************************

Verdicts:
[
    {
        "verdict": "yes",
        "reason": "The 'criteria' of the 1st node mentions 'eventName': 'fsales_trial_event'..."
    },
    {
        "verdict": "yes",
        "reason": "The 'dateCondition' in the 1st node has 'operator': 'after' and 'timezone': -330..."
    },
    {
        "verdict": "no",
        "reason": "The 'value' for 'dateCondition' in the retrieval context is '2021-03-30T00:00:00.000Z', not '2021-03-30T18:30:00.000Z'."
    },
    {
        "verdict": "yes",
        "reason": "The 1st node includes 'operation': 'performed' within the 'criteria'..."
    },
    {
        "verdict": "no",
        "reason": "No 'filters' object with 'fieldId': 'name' and 'comparator': 'contains' is present in the retrieval context."
    },
    {
        "verdict": "yes",
        "reason": "The 'condition' key is 'AND' in both the root and nested level of the retrieval context."
    }
]


Score: 0.6666666666666666
Reason: The score is 0.67 because sentences 1 and 2 in the expected output are aligned with nodes in retrieval context, specifically mentioning 'fsales_trial_event' and 'performed' operations, along with the correct 'AND' condition. However, the 'value' for 'dateCondition' does not match, and there is a discrepancy in the 'filters' object details.

======================================================================
**************************************************
Answer Relevancy Verbose Logs
**************************************************

Statements:
[
    "condition: AND",
    "condition: AND within matchGroups",
    "type: custom_event",
    "condition: AND within matches",
    "eventName: fsales_trial_event",
    "dateCondition: operator is after",
    "dateCondition: timezone is -330",
    "dateCondition: value is 2021-03-30T00:00:00.000Z",
    "dateCondition: secondValue is null",
    "dateCondition: relativeDateCount is 0",
    "operation: performed",
    "occurenceCondition: name is count",
    "occurenceCondition: type is number",
    "occurenceCondition: operator is greater_than_or_equals",
    "occurenceCondition: value is 1",
    "occurenceCondition dateCondition: operator is anytime",
    "occurenceCondition dateCondition: timezone is -330",
    "occurenceCondition dateCondition: value is 2024-06-18T13:09:00.108Z",
    "occurenceCondition dateCondition: secondValue is null",
    "occurenceCondition dateCondition: relativeDateCount is 0"
]


Verdicts:
[
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "yes",
        "reason": null
    },
    {
        "verdict": "no",
        "reason": "The 'occurenceCondition dateCondition: operator is anytime' statement does not address the input, which specifies a date condition 'after 2021-03-30'."
    },
    {
        "verdict": "idk",
        "reason": null
    },
    {
        "verdict": "idk",
        "reason": null
    },
    {
        "verdict": "idk",
        "reason": null
    },
    {
        "verdict": "idk",
        "reason": null
    }
]


Score: 0.95
Reason: The score is 0.95 because the output included a statement about an 'anytime' date condition which is irrelevant to the specific date condition 'after 2021-03-30' requested in the input.

======================================================================
✨ You're running DeepEval's latest Contextual Recall Metric! (using azure open…
✨ You're running DeepEval's latest Answer Relevancy Metric! (using azure opena…

======================================================================

Metrics Summary

  - ❌ Contextual Recall (score: 0.6666666666666666, threshold: 0.8, strict: False, evaluation model: azure openai, reason: The score is 0.67 because sentences 1 and 2 in the expected output are aligned with nodes in retrieval context, specifically mentioning 'fsales_trial_event' and 'performed' operations, along with the correct 'AND' condition. However, the 'value' for 'dateCondition' does not match, and there is a discrepancy in the 'filters' object details., error: None)
  - ✅ Answer Relevancy (score: 0.95, threshold: 0.6, strict: False, evaluation model: azure openai, reason: The score is 0.95 because the output included a statement about an 'anytime' date condition which is irrelevant to the specific date condition 'after 2021-03-30' requested in the input., error: None)

For test case:

  - input: Get me contacts who have performed a custom event named 'fsales_trial_event' after 2021-03-30 with the event name containing 'freshsales_web_form_created', 'freshsales_sales_sequence_created', or 'freshsales_workflow_automation_created'
  - actual output: {
    "condition": "AND",
    "matchGroups": [
        {
            "condition": "AND",
            "matches": [
                {
                    "type": "custom_event",
                    "condition": "AND",
                    "criteria": {
                        "eventName": "fsales_trial_event",
                        "dateCondition": {
                            "operator": "after",
                            "timezone": -330,
                            "value": "2021-03-30T00:00:00.000Z",
                            "secondValue": null,
                            "relativeDateCount": 0
                        },
                        "operation": "performed",
                        "occurenceCondition": {
                            "name": "count",
                            "type": "number",
                            "operator": "greater_than_or_equals",
                            "value": "1",
                            "dateCondition": {
                                "operator": "anytime",
                                "timezone": -330,
                                "value": "2024-06-18T13:09:00.108Z",
                                "secondValue": null,
                                "relativeDateCount": 0
                            }
                        }
                    }
                }
            ]
        }
    ]
}
  - expected output: {"condition": "AND", "matchGroups": [{"matches": [{"type": "custom_event", "filters": [{"value": "freshsales_web_form_created", "fieldId": "name", "fieldName": "name", "fieldType": "string", "columnName": "ef_string_01", "comparator": "contains"}], "criteria": {"eventName": "fsales_trial_event", "operation": "performed", "dateCondition": {"value": "2021-03-30T18:30:00.000Z", "operator": "after", "timezone": -330}}, "condition": "AND"}, {"type": "custom_event", "filters": [{"value": "freshsales_sales_sequence_created", "fieldId": "name", "fieldName": "name", "fieldType": "string", "columnName": "ef_string_01", "comparator": "contains"}], "criteria": {"eventName": "fsales_trial_event", "operation": "performed", "dateCondition": {"value": "2021-03-30T18:30:00.000Z", "operator": "after", "timezone": -330}}, "condition": "AND"}, {"type": "custom_event", "filters": [{"value": "freshsales_workflow_automation_created", "fieldId": "name", "fieldName": "name", "fieldType": "string", "columnName": "ef_string_01", "comparator": "contains"}], "criteria": {"eventName": "fsales_trial_event", "operation": "performed", "dateCondition": {"value": "2021-03-30T18:30:00.000Z", "operator": "after", "timezone": -330}}, "condition": "AND"}], "condition": "AND"}]}
  - context: None
  - retrieval context: ['{\n    "condition": "AND",\n    "matchGroups": [\n        {\n            "condition": "AND",\n            "matches": [\n                {\n                    "type": "custom_event",\n                    "condition": "AND",\n                    "criteria": {\n                        "eventName": "fsales_trial_event",\n                        "dateCondition": {\n                            "operator": "after",\n                            "timezone": -330,\n                            "value": "2021-03-30T00:00:00.000Z",\n                            "secondValue": null,\n                            "relativeDateCount": 0\n                        },\n                        "operation": "performed",\n                        "occurenceCondition": {\n                            "name": "count",\n                            "type": "number",\n                            "operator": "greater_than_or_equals",\n                            "value": "1",\n                            "dateCondition": {\n                                "operator": "anytime",\n                                "timezone": -330,\n                                "value": "2024-06-18T13:09:00.108Z",\n                                "secondValue": null,\n                                "relativeDateCount": 0\n                            }\n                        }\n                    }\n                }\n            ]\n        }\n    ]\n}']

======================================================================

Overall Metric Pass Rates

Contextual Recall: 0.00% pass rate
Answer Relevancy: 100.00% pass rate

======================================================================

✅ Tests finished! View results on 
https://app.confident-ai.com/project/clwzxg76s000clc0ch0w2kpcw/unit-tests/cly0xn
it2076uup7nr9yrlbvx/test-cases
